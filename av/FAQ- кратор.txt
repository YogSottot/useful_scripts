FAQ
/
Настройка фаервола
Настройка фаервола: ограничение доступа по прямому IP адресу защищаемого приложения

При использовании защиты в proxy-based режиме (домены в Qrator, не использующие технологии для фильтрации HTTPS далее plain HTTP и технология "фильтрация HTTPS с раскрытием ключей") Qrator перенаправляет запросы от пользователей на ваш сервер, используя следующие адреса в качестве source ip:

66.110.32.128/30
83.234.15.112/30
87.245.197.192/30
185.94.108.0/24
Для избежания атаки по прямому IP адресу вашего сервера необходимо ограничить доступ на уровне межсетевого экрана всем адресам, кроме вышеперечисленных. Данный список может быть расширен адресами, которые являются для вас доверенными (офис, сотрудники, автоматизированный инструментарий), что исключит возможность их блокировки (ложных срабатываний) и уменьшит количество легитимного трафика, пропускаемого через сеть Qrator.

Руководство по конфигурации Linux Netfilter (proxy-based protection)

Обратите внимание:
Универсальную инструкцию для настройки межсетевого экрана сделать сложно, т.к. зачастую в iptables уже содержатся правила, а также могут быть различные особенности, как, например, трансляция порта в контейнер. Предупреждаем, что результат выполнения данного скрипта сильно зависит от вашей текущей конфигурации и применение этих правил без изменений может привести к нежелательным последствиям или не иметь никакого эффекта.
Чтобы предупредить возможность осуществления DDoS атаки, нацеленной на прямой адрес вашего сервера, вам необходимо в правилах iptables разрешить входящие пакеты на tcp порты 80 и 443 с адресов из указанного списка (а также вы можете расширить этот список доверенными адресами для своих целей администрирования или разработки) и далее запретить (DROP) доступ к этим портам для всего остального.

В зависимости от вашей системы вы можете использовать либо только правила iptables для plain HTTP, либо комбинировать их с правилами для iptables с поддержкой модулей conntrack и ipset. Мы рекомендуем использовать как conntrack, так и ipset, поскольку он делает набор правил iptables меньше (тем самым упрощая его обслуживание) и быстрее (меньше правил означает меньшее количество запросов на входящем пакете).

Пример конфигурации IP tables для plain HTTP

-----------------------------------------------------------------------
#!/bin/bash

# Добавим ваши IP адреса и подсети в список доверенных:
ADMIN_IPS="
127.0.0.1
"

QRATOR_NODES="
66.110.32.128/30
83.234.15.112/30
87.245.197.192/30
185.94.108.0/24
"

iptables -N qrator_ips
for IP in $ADMIN_IPS $QRATOR_NODES; do
    iptables -A qrator_ips -s $IP -j RETURN
done
iptables -A qrator_ips -j DROP

iptables -A INPUT -p tcp -m multiport --dports 80,443 -j qrator_ips

----------------------------------------------------------------------
Пример конфигурации для IP tables с поддержкой conntrack и ipset
----------------------------------------------------------------------

#!/bin/bash

# Добавим ваши IP адреса и подсети в список доверенных:
ADMIN_IPS="
127.0.0.1
"

QRATOR_NODES="
66.110.32.128/30
83.234.15.112/30
87.245.197.192/30
185.94.108.0/24
"

# Создание доверенного списка адресов:
ipset -N trusted_nodes hash:net
for ip in $ADMIN_IPS $QRATOR_NODES; do
    ipset -A trusted_nodes ${IP}
done

# Создание правил IP tables:
iptables -N qrator
iptables -A qrator -m set --match-set trusted_nodes src -j ACCEPT
iptables -A qrator -j DROP

iptables -I INPUT --state ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -p tcp -m multiport --dports 80,443 --state NEW -j qrator
