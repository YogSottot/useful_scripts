# https://regex101.com/

rewrite ^/old/url/stuff/(.*) $scheme://$host/new/url/stuff/ permanent;

location /old/url/stuff/ {
	return 301 /new/url/stuff/;
}

##
# http://www.example.com/img/products/10103/f/10103-s-1.jpg
# And would want to rewrite it to:
# http://www.example.com/img/products/10103/10103-s-1.jpg
##
location /img/products/ {
	rewrite ^/img/products/(.*)/f/(.*)$ /img/products/$1/$2 permanent;
}


##
# /motoreduktory1/tp1160_mmax_170nm/
# redirect to
# /motoreduktory/tp1160_mmax_170nm/
##
location = /motoreduktory1/ {
    return 301 /motoreduktory/ ;
}

location ~^/(.*)/accommodations/apartamenty-s-odnoy-spalney/rezidentsiya-(.*)$ {
	return 301 /$1/accommodations/apartamenty-s-odnoy-spalney/apartamenty-$2;
}

location ~^/tali_elektricheskie/kanatnye/(.*)$ {
    return 301 /tali/elektricheskie/taly_kanatnye/$1;
}

#To drop a parameter from a URL, in this case coupon=xxx:
if ($query_string ~ "^(.*)coupon=(.*)$") {
    rewrite ^(.*)$ $uri? permanent;
}

# fishing
if ($query_string ~ "goto") {
        return 301 /404.php;
}

# exclude from global redirect
if ($request_uri = /doktora/name_1.html) {
        return 404; break;
}


# /handbook/personal-blog/?page=blog&blog=blogname
# /handbook/personal-blog/blogname/

# Здесь переменные:
# — «blogname»


# /handbook/personal-blog/?page=post&blog=blogname&post_id=postname
# /handbook/personal-blog/blogname/postname/

# Здесь переменные:
# — «blogname»
# — «postname»

# /handbook/personal-blog/?page=group&group_id=2
# /handbook/personal-blog/group/2/

# Здесь:
# — «числовой идентификатор группы»

# реализация
# https://serverfault.com/questions/488444/nginx-rewrite-convert-querystring-to-path

location = /handbook/personal-blog/ {

	if ($args ~* "^page=post&blog=(.*)&post_id=(.*)$") {
		rewrite ^.*$ /handbook/personal-blog/$arg_blog/$arg_post_id/? permanent; break;
	}

	if ($args ~* "^page=blog&blog=(.*)$") {
		rewrite ^.*$ /handbook/personal-blog/$arg_blog/? permanent; break;
	}
	
	if ($args ~* "^page=group&group_id=(.*)$") {
		rewrite ^.*$ /handbook/personal-blog/group/$arg_group_id/? permanent; break;
	}
	
}

if ($query_string ~ "^from=(.*)$") {
    return 301 $scheme://$host;
}
if ($query_string ~ "^from=xiaodiaomao.com") {
    return 301 $scheme://$host;
} 

# make proxy
location / {
    proxy_pass http://192.168.13.31;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
}

# delete index.php
location ~* "^(/(?!personal|bitrix|auth).*)index\.php$" {
    return 301 $1;
}

# remove index.php только для ссылок без get-параметров
if ($request_uri ~* "^(/(?!personal|bitrix|auth).*)index\.php$") { return 301 $1; }

# 301 редирект всех адресов с index.php и GET параметрами на страницы только с GET параметрами
if ($request_uri ~* "^(/(?!ajax|auth|bitrix|basket|form\.php|order|personal|seller|\?back_url_admin).*)index\.php(?:.*)$") { return 301 $1$is_args$args; }
# or
if ($request_uri ~ "^([^#?]*?/)index\.php(?:/)?(.*)") { return 301 "$1$2"; }


# Remove Trailing Question Mark
if ($request_uri ~ ^(/(?!personal|bitrix|auth).*)\?$) {  return 301 $1;  }
 
# Remove Trailing /%20/
if ($request_uri ~ ^(.*)\/%20\/$) {  return 301 $1;  }


# all pages redirect to front page
        location / {
            rewrite ^ / redirect;
        }

        location = / {
                proxy_pass $proxyserver;
        }

# redirect some pages to some pages        
if ($host ~ "rosesmarket.ru|www.rosesmarket.ru") {
# redirects
}

# между папками rgb и js допустим мы вставляли версию приложения, для управления кешем браузеров. Физически папки v1612872511 не существует
location ~* ^/local/templates/bitrix24/app/rgb/(.*)/js/app.js$ {
  try_files /local/templates/bitrix24/app/rgb/js/app.js $uri  =404;
  error_page 404 /404.html;
  access_log   off;
  log_not_found off;
}
# или чтобы при обращении к /local/templates/bitrix24/app/rgb/v1612872511/* открывались файлы /local/templates/bitrix24/app/rgb/*
location ~* ^/local/templates/bitrix24/app/rgb/v([0-9]+)/(.*)$ {
  try_files /local/templates/bitrix24/app/rgb/$2 $uri  =404;
  error_page 404 /404.html;
  access_log   off;
  log_not_found off;
}


# редирект, если в url есть ?
if ($request_uri = /myservice/pages/service/service.html?URL=/eServiceCNX/eservice.dll ) 
{ 
    return 301 /myservice/pages/service/service.html?URL=/eService/eservice.dll; 
}

# если много редиректов, то лучше через map
cat maps/00_maps.conf 
map_hash_max_size 4096;
map_hash_bucket_size 4096;

cat bx/map/rewrites.conf
map $request_uri $new_uri {
/old/ /new/;
/old2/ /new2/;
}

cat site_settings/default/seo.conf 
# Include custom redirects
if ($new_uri) {
   return 301 $new_uri;
}
